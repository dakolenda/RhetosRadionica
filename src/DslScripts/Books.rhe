Module Bookstore
{
    Entity Book
    {
        ShortString Code { AutoCode; }
        ShortString Title {Required;}
        Integer NumberOfPages {MinValue 10; MaxValue 2000;}
        DateTime DateCreated { CreationTime; }
        ItemFilter CommonMisspelling 'book => book.Title.Contains("curiousity")';
        InvalidData CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';

        Reference Author Bookstore.Person;
        Logging;
    }
    Entity Person
    {
        ShortString Name;        
    }
    //One to Many
    Entity Comment{
        Reference Book {Detail;}
        LongString Text;
    }
    //One to One
    Entity ChildrensBook
    {
        Extends Bookstore.Book;
        Integer AgeFrom;
        Integer AgeTo;
    }
    Entity ForeignBook{
        Extends Bookstore.Book;
        ShortString OriginalLanguage; 
        Reference Translator Bookstore.Person;
    }
    Entity Topic
    {
        ShortString Name {Unique; Required;}
    } 
    //Many to Many
    Entity BookTopic
    {
        Reference Book { Required; }
        Reference Topic { Required; }
 
        UniqueMultiple 'Book Topic';
    }  
    Browse NasloviIAutori Bookstore.Book  
    {
        Take Title;
        Take AuthorName 'Author.Name';
        Take OriginalLanguage 'Extension_ForeignBook.OriginalLanguage';
    }
    SqlQueryable BookInfo
    "
        SELECT
            b.ID,
            b.Title,
            NumberOfComments = COUNT(c.ID)
        FROM
            Bookstore.Book b
            LEFT JOIN Bookstore.Comment c ON c.BookID = b.ID
        GROUP BY
            b.ID,b.Title
    "
    {
        Extends Bookstore.Book;
        ShortString Title;
        Integer NumberOfComments;

        AutodetectSqlDependencies;
    }
}